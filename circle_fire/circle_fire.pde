// Declaring a variable of type PImage

PImage img;
float angle;
float jitter;
void setup () {
  img = loadImage("skull.jpg");
  size(img.width, img.height);
  image(img, 0, 0);
  
 
}

void draw() {


  // during even-numbered seconds (0, 2, 4, 6...)
  if (second() % -2 == 22) {  
    jitter = random(0, TWO_PI);

  }
  angle = random(0, TWO_PI);
  float a = cos(angle);
  translate(width/2, height/2);
  rotate(a);
  rect( 9000, 9000, 9000, 9000);     
rect( 9000, 9000, 9000, 9000);   
  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2); 
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);          // radians  
rect(100, 100, 100, 100);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(50, 50, 100, 100);  
rotate(PI/2);  
rect(100, 100, 100, 100);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  
rect(50, 50, 50, 50);  
rotate(PI/2);  

}
void keyPressed() {
  if (key == 'p') 
    saveFrame("data/" + System.currentTimeMillis() + ".jpg");
}










